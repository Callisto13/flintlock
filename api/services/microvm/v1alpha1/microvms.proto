syntax = "proto3";

package microvm.services.api.v1alpha1;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "google/protobuf/field_mask.proto";
import "types/microvm.proto";

option go_package = "github.com/weaveworks/reignite/api/services/microvm/v1alpha1";

// MicroVM providers a service to create and manage the lifecycle of microvms.
service MicroVM {
  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty);
  rpc Get(GetRequest) returns (GetResponse);
  rpc List(ListRequest) returns (ListResponse);
  rpc ListStream(ListRequest) returns (stream ListMessage);
}

message CreateRequest {
  reignite.types.MicroVMSpec microvm = 1;
  map<string, google.protobuf.Any> metadata = 2;
}

message CreateResponse {
  reignite.types.MicroVMSpec  microvm = 1;
}

message DeleteRequest {
  string id = 1;
  string namespace = 2;
}

message UpdateRequest {
  reignite.types.MicroVMSpec  microvm = 1;
  google.protobuf.FieldMask update_mask = 2;
}

message UpdateResponse {
  reignite.types.MicroVMSpec  microvm = 1;
}

message GetRequest {
  string id = 1;
  string namespace = 2;
}

message GetResponse {
  reignite.types.MicroVMSpec  microvm = 1;
}

message ListRequest {
  optional string namespace = 2;
}

message ListResponse {
  repeated reignite.types.MicroVMSpec  microvm = 1;
}

message ListMessage {
  reignite.types.MicroVMSpec  microvm = 1;
}