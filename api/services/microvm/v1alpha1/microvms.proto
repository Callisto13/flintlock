syntax = "proto3";

package microvm.services.api.v1alpha1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/weaveworks/reignite/api/services/microvm/v1alpha1";

// MicroVM providers a service to create and manage the lifecycle of microvms.
service MicroVM {
  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty);
  rpc Get(GetRequest) returns (GetResponse);
  rpc List(ListRequest) returns (ListResponse);
  rpc ListStream(ListRequest) returns (stream ListMessage);
}

message MicroVMSpec {
  // ID is the identifier of the microvm.
  // If this empty at creation time a ID will be automatically generated.
  string id = 1;

  string namespace = 2;

  // Labels allows you to include extra data for the microvms.
  map<string, string> labels = 3;

  // VCPU specifies how many vcpu the machine will be allocated.
  int32 vcpu = 4;

  // MemoryInMb is the amount of memory in megabytes that the machine will be allocated.
  int32 memory_in_mb = 5;

  // Kernel is the details of the kernel to use . 
  Kernel kernel = 6;

  // Initrd_image is the container image to use for the initial ramdisk.
  optional string initrd_image = 7;

  repeated Volume volumes = 8;

  repeated NetworkInterface interfaces = 9;

  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

// Kernel represents the configuration for a kernel.
message Kernel {
  // Image is the container image to use.
  string image = 1;
  // Cmdline is the kernel command line args.
  string cmdline = 2;
  // Filename is used to specify the name of the kernel file
  // in the Image.
  optional string filename = 3;
}

message NetworkInterface {
  // AllowMetadataReq indicates if the network interface allows metadata requests.
  bool allow_metadata_req = 1;
  // GuestMAC allows the specifying of a specifi MAC address to use for the interface. If
	// not supplied a autogenerated MAC address will be used.y 
  optional string guest_mac = 2;
  // GuestDeviceName is the name of the network interface to create in the microvm. If this
	// is not supplied than a device name will be assigned automatically
  optional string guest_device_name = 3;
}

message Volume {
  string id = 1;
  bool is_root = 2;
  bool is_read_only = 3;
  string mount_point = 4;
  VolumeSource source = 5;
  optional string partition_id = 6;
  optional int32 size_in_mb = 7;
}

message VolumeSource {
  optional string container_source = 1;
  optional HostPathVolumeSource hostpath_source = 2;
}

message HostPathVolumeSource {
  string path = 1;
  string type = 2;
}

message CreateRequest {
  MicroVMSpec microvm = 1;
  map<string, google.protobuf.Any> metadata = 2;
}

message CreateResponse {
  MicroVMSpec  microvm = 1;
}

message DeleteRequest {
  string id = 1;
  string namespace = 2;
}

message UpdateRequest {
  MicroVMSpec  microvm = 1;
  google.protobuf.FieldMask update_mask = 2;
}

message UpdateResponse {
  MicroVMSpec  microvm = 1;
}

message GetRequest {
  string id = 1;
  string namespace = 2;
}

message GetResponse {
  MicroVMSpec  microvm = 1;
}

message ListRequest {
  optional string namespace = 2;
}

message ListResponse {
  repeated MicroVMSpec  microvm = 1;
}

message ListMessage {
  MicroVMSpec  microvm = 1;
}